{"version":3,"sources":["webpack:///./scripts/fetchCountries.js"],"names":["debounce","require","htmlArea","document","querySelector","input","addEventListener","userInput","searchText","value","fetch","then","response","json","data","number","length","innerHTML","alert","text","success","PNotifySuccess","html","forEach","country","flag","name","capital","population","languages","map","language","renderHtmlFrom","status","error","catch","console","log"],"mappings":"iNAAMA,G,oBAAWC,EAAQ,SAmBnBC,EAAWC,SAASC,cAAc,cAClCC,EAAQF,SAASC,cAAc,WAmErCC,EAAMC,iBAAiB,QAASN,GAnCT,SAACO,GACtB,IAAMC,EAAaH,EAAMI,MAEzBC,MADoB,yCAAyCF,GAE5DG,MAAK,SAAAC,GAEJ,OAAOA,EAASC,UAGjBF,MAAK,SAAAG,GACJ,IAzDoBC,EAyDdC,EAASF,EAAKE,OAKpB,OAlBFd,EAASe,UAAY,GAkBhBD,EAAS,IA9DQD,EA+DMC,EA/DKE,gBAAM,CACjCC,KAAM,WAAWJ,EAAb,+CAiEJC,EAAS,GAzDM,SAACD,GAAWK,kBAAQ,CACzCD,KAAM,kBAAkBJ,EAApB,MAyDEM,CAAeL,GA7CA,SAACF,GACtB,IAAIQ,EAAO,GAkBX,OAjBAR,EAAKS,SAAQ,SAAAC,GACbF,GAAI,iIAIwCE,EAAQC,KAJhD,UAI8DD,EAAQE,KAJtE,mGAOkCF,EAAQE,KAP1C,6DAQ+CF,EAAQG,QARvD,oEASqDH,EAAQI,WAT7D,mEAUqEJ,EAAQK,UAjBzDC,KAAI,SAAAC,GAAQ,OAAIA,EAASL,QAO7C,0DAeJxB,EAASe,UAAYK,EACdR,EA2BMkB,CAAelB,SAIR,KAAfA,EAAKmB,QAnEeC,gBAAM,CAC/Bf,KAAM,0BAuELgB,OAAM,SAAAD,GACLE,QAAQC,IAAIH,QAIyC,Q","file":"main.bb64bf2bbc47011e0bb2.js","sourcesContent":["const debounce = require('lodash.debounce');\nimport { alert, notice, info, success, error, defaultModules } from'@pnotify/core';\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nconst PNotifyWarning = (number) => alert({\n        text: `Найдено ${number} стран, укажите более конкретное название`\n  });\n\n\nconst PNotifyError = () => error({\n  text: \"Ничего не найдено\"\n});\n\nconst PNotifySuccess = (number) => success({\n  text: `Найдено стран: ${number} `\n});\n  \n\nconst htmlArea = document.querySelector(\"#countries\")\nconst input = document.querySelector(\"#search\")\n\nconst showLanguagesFrom = (array) => {\n  const languages = array.map(language => language.name)\n  return languages\n}\n\nconst renderHtmlFrom = (data) => {\n  let html = \"\"\n  data.forEach(country => {\n  html +=\n    `<div class=\"country\">\n      <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <img class=\"country__flag\" src=\"${country.flag}\" alt=\"${country.name}\" />\n          </div>\n          <div class=\"col-sm-6\">\n            <h2 class=\"country__name\">${country.name}</h2>\n            <div class=\"country__capital\">Capital: ${country.capital}</div>\n            <div class=\"country__population\">Population: ${country.population}</div>\n            <div class=\"country__languages\">Languages: ${showLanguagesFrom(country.languages)} </div>\n          </div>\n      </div>\n    </div>`\n  })\n  htmlArea.innerHTML = html\n  return data\n}\nconst cleanHtml = () => {\n  htmlArea.innerHTML = \"\"\n}\n\nconst fetchCountries = (userInput) => {\n  const searchText = input.value\n  const searchQuery = `https://restcountries.eu/rest/v2/name/${searchText}`\n  fetch(searchQuery)\n  .then(response => {\n    // console.log(response.status)\n    return response.json()\n    //response handling\n  })\n  .then(data => {\n    const length = data.length\n    //clean current html\n    cleanHtml()\n\n\n    if(length > 10) {\n        return PNotifyWarning(length);\n    }\n\n    if (length > 0) {\n        PNotifySuccess(length)\n        return renderHtmlFrom(data)\n    }\n\n\n    if(data.status == 404) {\n      PNotifyError()\n    }\n\n})\n  .catch(error => {\n    console.log(error)\n  });\n\n}\ninput.addEventListener(\"input\", debounce(fetchCountries, 5000))\n"],"sourceRoot":""}